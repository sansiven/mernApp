{"ast":null,"code":"var _jsxFileName = \"D:\\\\2077\\\\mernApp\\\\client\\\\src\\\\components\\\\auth\\\\Login.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col s8 offset-s2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      className: \"btn-flat waves-effect\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    }, \"keyboard_backspacce\"), \"Back To Home\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col s12\",\n      style: {\n        paddingLeft: \"11px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 33\n      }\n    }, \"Login\"), \" Below\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"grey-text text-darken-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }, \"Don't have an account ? \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 57\n      }\n    }, \"Register\"))), /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: e => this.handleSubmit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field col s12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => this.handleChange(e),\n      value: this.state.email,\n      error: errors.email,\n      id: \"email\",\n      type: \"email\",\n      className: errors.email || errors.emailnotfound ? 'invalid' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 33\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"red-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 33\n      }\n    }, errors.email, errors.emailnotfound)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field col s12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => this.handleChange(e),\n      value: this.state.password,\n      error: errors.password,\n      id: \"password\",\n      type: \"password\",\n      className: errors.password || errors.passwordincorrect ? 'invalid' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 33\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"red-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 33\n      }\n    }, errors.password, errors.passwordincorrect)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col s12\",\n      style: {\n        paddingLeft: \"11px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        width: \"150px\",\n        borderRadius: \"3px\",\n        letterSpacing: \"1.5px\",\n        marginTop: \"1rem\"\n      },\n      type: \"submit\",\n      className: \"btn btn-large waves-effect waves-light hoverable blue accent-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    }, \"Log In\"))))));\n  }\n\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(Login);","map":{"version":3,"sources":["D:/2077/mernApp/client/src/components/auth/Login.js"],"names":["React","Component","Link","PropTypes","connect","loginUser","Login","state","email","password","errors","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","userData","props","componentWillReceiveProps","nextProps","auth","isAuthenticated","history","push","render","paddingLeft","emailnotfound","passwordincorrect","width","borderRadius","letterSpacing","marginTop","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\n\r\nclass Login extends Component {\r\n\r\n\r\n    state = {\r\n        email: \"\",\r\n        password: \"\",\r\n        errors: {}\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n\r\n        if(nextProps.auth.isAuthenticated){\r\n            this.props.history.push(\"/dashboard\")\r\n        }\r\n\r\n        if(nextProps.errors){\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const userData = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        };\r\n        this.props.loginUser(userData); \r\n        // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s8 offset-s2\">\r\n                        <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n                            <i className=\"material-icons left\">keyboard_backspacce</i>\r\n                            Back To Home\r\n                        </Link>\r\n                        <div className=\"col s12\" style={{paddingLeft:\"11px\"}}>\r\n                            <h4><b>Login</b> Below</h4>\r\n                            <p className=\"grey-text text-darken-1\">\r\n                                Don't have an account ? <Link to=\"/register\">Register</Link>\r\n                            </p>\r\n                        </div>\r\n                        <form noValidate onSubmit={(e) => this.handleSubmit(e)}>\r\n                            \r\n                            <div className=\"input-field col s12\">\r\n                                <input \r\n                                    onChange={(e) => this.handleChange(e)}\r\n                                    value={this.state.email}\r\n                                    error={errors.email}\r\n                                    id=\"email\"\r\n                                    type=\"email\"\r\n                                    className={errors.email || errors.emailnotfound ? 'invalid' : ''}\r\n                                />\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <span className=\"red-text\">{errors.email}{errors.emailnotfound}</span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={(e) => this.handleChange(e)}\r\n                                    value={this.state.password}\r\n                                    error={errors.password}\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    className={errors.password || errors.passwordincorrect ? 'invalid' : ''}\r\n                                />\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <span className=\"red-text\">{errors.password}{errors.passwordincorrect}</span>\r\n                            </div>\r\n                \r\n                            <div className=\"col s12\" style={{paddingLeft: \"11px\"}}>\r\n                                <button\r\n                                    style={{\r\n                                        width: \"150px\",\r\n                                        borderRadius: \"3px\",\r\n                                        letterSpacing: \"1.5px\",\r\n                                        marginTop: \"1rem\"\r\n                                    }}\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\">\r\n                                        Log In\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nLogin.propTypes = {\r\n    loginUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { loginUser }\r\n)(Login);"]},"metadata":{},"sourceType":"module"}